/**
 * User service definition for the simple example.
 * 
 * This demonstrates how to define gRPC services that will be converted
 * to MCP server tools using connect-go-mcp.
 */
syntax = "proto3";

package user.v1;

option go_package = "github.com/yoshihiro-shu/connect-go-mcp/example/simple/gen/user/v1;userv1";

import "google/protobuf/timestamp.proto";

// Request to get user information
// Parameter user_id: User ID (required)
// Return value: User name, email address, creation timestamp
message GetUserRequest {
  string user_id = 1; // User ID
}

message GetUserResponse {
  User user = 1; // User information
}

// Request to create a user
// Parameters name: User name (required), email: Email address (required)
// Return value: Created user information
message CreateUserRequest {
  string name = 1;  // User name
  string email = 2; // Email address
}

message CreateUserResponse {
  User user = 1; // Created user information
}

// Request to get user list
// Parameters limit: Number of records to retrieve (optional), offset: Offset (optional)
// Return value: User list
message ListUsersRequest {
  int32 limit = 1;  // Number of records to retrieve
  int32 offset = 2; // Offset
}

message ListUsersResponse {
  repeated User users = 1; // User list
  int32 total = 2;         // Total count
}

// User information
message User {
  string id = 1;                              // User ID
  string name = 2;                            // User name
  string email = 3;                           // Email address
  google.protobuf.Timestamp created_at = 4;   // Creation timestamp
}

// User management service
service UserService {
  // GetUser - Get user information
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {}

  // CreateUser - Create a user
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {}

  // ListUsers - Get user list
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse) {}
}
