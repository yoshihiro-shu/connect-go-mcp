// Code generated by connect-go-mcp DO NOT EDIT.
package greetv1

import (
	"context"

	"github.com/modelcontextprotocol/go-sdk/mcp"
	connectgomcp "github.com/yoshihiro-shu/connect-go-mcp"
)

// NewMCPServerWithTools creates and returns a configured GreetService MCP server
func NewGreetServiceMCPServer(baseURL string, opts ...connectgomcp.ClientOption) *mcp.Server {
	server := mcp.NewServer(&mcp.Implementation{
		Name:    "GreetService",
		Version: "1.0.0",
	}, nil)

	toolHandler := connectgomcp.NewToolHandler(baseURL, opts...)
	mcp.AddTool(
		server,
		&mcp.Tool{
			Name:        "Greet RPC",
			Description: "Greeting request",
		},
		func(ctx context.Context, req *mcp.CallToolRequest, input map[string]interface{}) (*mcp.CallToolResult, interface{}, error) {
			result, err := toolHandler.Handle(ctx, req, "Greet")
			if err != nil {
				return nil, nil, err
			}
			return result, nil, nil
		},
	)

	mcp.AddTool(
		server,
		&mcp.Tool{
			Name:        "Ping RPC",
			Description: "Ping request",
		},
		func(ctx context.Context, req *mcp.CallToolRequest, input map[string]interface{}) (*mcp.CallToolResult, interface{}, error) {
			result, err := toolHandler.Handle(ctx, req, "Ping")
			if err != nil {
				return nil, nil, err
			}
			return result, nil, nil
		},
	)

	return server
}
